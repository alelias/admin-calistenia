[{"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/index.js":"1","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/App.js":"2","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/userList/UserList.js":"3","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/components/topbar/Topbar.js":"4","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/components/sidebar/Sidebar.js":"5","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/home/Home.js":"6","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/components/widgetSm/WidgetSm.js":"7","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/components/featuredInfo/FeaturedInfo.js":"8","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/components/widgetLg/WidgetLg.js":"9","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/components/chart/Chart.js":"10","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/dificultList/DificultList.js":"11","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/newList/NewList.js":"12","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/routineList/RoutineList.js":"13","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/eventList/EventList.js":"14","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/parkList/ParkList.js":"15","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/profileList/ProfileList.js":"16","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/exerciceList/ExerciceList.js":"17","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/instructorList/InstructorList.js":"18","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/login/Login.js":"19","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/dashboard/Dashboard.js":"20"},{"size":156,"mtime":1627925011874,"results":"21","hashOfConfig":"22"},{"size":499,"mtime":1637613405535,"results":"23","hashOfConfig":"22"},{"size":6539,"mtime":1638679702842,"results":"24","hashOfConfig":"22"},{"size":581,"mtime":1638677607654,"results":"25","hashOfConfig":"22"},{"size":3645,"mtime":1638677481770,"results":"26","hashOfConfig":"22"},{"size":545,"mtime":1637615019505,"results":"27","hashOfConfig":"22"},{"size":1616,"mtime":1628217973370,"results":"28","hashOfConfig":"22"},{"size":1633,"mtime":1637615255339,"results":"29","hashOfConfig":"22"},{"size":799,"mtime":1628391548605,"results":"30","hashOfConfig":"22"},{"size":787,"mtime":1628204107954,"results":"31","hashOfConfig":"22"},{"size":5474,"mtime":1638673473018,"results":"32","hashOfConfig":"22"},{"size":6226,"mtime":1638673516260,"results":"33","hashOfConfig":"22"},{"size":7276,"mtime":1638675247572,"results":"34","hashOfConfig":"22"},{"size":7680,"mtime":1638673483340,"results":"35","hashOfConfig":"22"},{"size":6643,"mtime":1638676962021,"results":"36","hashOfConfig":"22"},{"size":5100,"mtime":1635895203869,"results":"37","hashOfConfig":"22"},{"size":8228,"mtime":1638675216679,"results":"38","hashOfConfig":"22"},{"size":5222,"mtime":1635895184417,"results":"39","hashOfConfig":"22"},{"size":568,"mtime":1637614204522,"results":"40","hashOfConfig":"22"},{"size":1964,"mtime":1637613471309,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"hd6jil",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"44"},"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/index.js",[],["93","94"],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/App.js",["95"],"import React from 'react';\n\nimport \"./app.css\"\nimport Dashboard from './pages/dashboard/Dashboard';\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom'\nimport Login from './pages/login/Login';\n\n\nfunction App() {\n  return (\n    <Router>\n        <Switch>\n          <Route exact path='/'>\n            <Login />\n          </Route>\n          <Route path='/dashboard/home'>\n            <Dashboard />\n          </Route>\n        </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/userList/UserList.js",["96","97"],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/components/topbar/Topbar.js",[],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/components/sidebar/Sidebar.js",["98","99","100"],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/home/Home.js",[],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/components/widgetSm/WidgetSm.js",[],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/components/featuredInfo/FeaturedInfo.js",[],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/components/widgetLg/WidgetLg.js",[],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/components/chart/Chart.js",[],["101","102"],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/dificultList/DificultList.js",["103","104","105"],"import React, { useState, useEffect } from \"react\";\nimport { Table, Button, Modal, Input, Form } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport \"./dificultList.css\";\nconst axios = require(\"axios\");\nconst { Item } = Form;\n\nconst baseUrl = \"http://67.205.155.156:4500/api/dificultad\";\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\nexport default function DificultList() {\n  const [data, setData] = useState([]);\n  const [dificults, setDificults] = useState({\n    iddificultad: \"\",\n    nombre: \"\",\n  });\n\n  const [modalInsertar, setModalInsertar] = useState(false);\n  const [modalEditar, setModalEditar] = useState(false);\n  const [modalEliminar, setModalEliminar] = useState(false);\n\n  const abrirCerrarModalInsertar = () => {\n    setModalInsertar(!modalInsertar);\n  };\n\n  const abrirCerrarModalEditar = () => {\n    setModalEditar(!modalEditar);\n  };\n\n  const abrirCerrarModalEliminar = () => {\n    setModalEliminar(!modalEliminar);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setDificults({ ...dificults, [name]: value });\n    console.log(dificults);\n  };\n\n  const seleccionarDificults = (dificults, caso) => {\n    setDificults(dificults);\n    caso === \"Editar\" ? abrirCerrarModalEditar() : abrirCerrarModalEliminar();\n  };\n\n  const peticionGet = async () => {\n    await axios\n      .get(baseUrl)\n      .then((response) => {\n        setData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionPost = async () => {\n    //delete artista.id;\n    await axios\n      .post(baseUrl, dificults)\n      .then((response) => {\n        setData(data.concat(response.data));\n        abrirCerrarModalInsertar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionPut = async () => {\n    await axios\n      .put(baseUrl + \"/\" + dificults.iddificultad, dificults)\n      .then((response) => {\n        var dataAuxiliar = data;\n        dataAuxiliar.map((elemento) => {\n          if (elemento.id === dificults.iddificultad) {\n            elemento.nombre = dificults.nombre;\n          }\n        });\n        setData(dataAuxiliar);\n        abrirCerrarModalEditar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionDelete = async () => {\n    await axios\n      .delete(baseUrl + \"/\" + dificults.iddificultad)\n      .then((response) => {\n        setData(\n          data.filter(\n            (elemento) => elemento.iddificultad !== dificults.iddificultad\n          )\n        );\n        abrirCerrarModalEliminar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    peticionGet();\n  }, []);\n  const columns = [\n    {\n      title: \"Nombre\",\n      dataIndex: \"nombre\",\n      key: \"nombre\",\n    },\n\n    {\n      title: \"Acciones\",\n      key: \"acciones\",\n      width: 280,\n      render: (fila) => (\n        <>\n          <Button\n            type=\"primary\"\n            onClick={() => seleccionarDificults(fila, \"Editar\")}\n          >\n            Editar\n          </Button>{\" \"}\n          {\"   \"}\n          <Button\n            type=\"primary\"\n            danger\n            onClick={() => seleccionarDificults(fila, \"Eliminar\")}\n          >\n            Eliminar\n          </Button>\n        </>\n      ),\n    },\n  ];\n  return (\n    <div className=\"dificultList\">\n      <br />\n      <h1>Dificultades</h1>\n      <br />\n      <Button\n        type=\"primary\"\n        className=\"botonInsertar\"\n        onClick={abrirCerrarModalInsertar}\n      >\n        Insertar Nueva Dificultad\n      </Button>\n      <br />\n      <br />\n      <Table\n        locale={{ emptyText: \"Cargando...\" }}\n        columns={columns}\n        dataSource={data}\n      />\n\n      <Modal\n        visible={modalInsertar}\n        title=\"Insertar Dificultad\"\n        destroyOnClose={true}\n        onCancel={abrirCerrarModalInsertar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalInsertar}>Cancelar</Button>,\n          <Button type=\"primary\" onClick={peticionPost}>\n            Insertar\n          </Button>,\n        ]}\n      >\n        <Form {...layout}>\n          <Item label=\"Dificultad\">\n            <Input name=\"nombre\" onChange={handleChange} />\n          </Item>\n        </Form>\n      </Modal>\n\n      <Modal\n        visible={modalEditar}\n        title=\"Editar Dificultad\"\n        onCancel={abrirCerrarModalEditar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalEditar}>Cancelar</Button>,\n          <Button type=\"primary\" onClick={peticionPut}>\n            Editar\n          </Button>,\n        ]}\n      >\n        <Form {...layout}>\n          <Item label=\"Artista\">\n            <Input\n              name=\"nombre\"\n              onChange={handleChange}\n              value={dificults && dificults.nombre}\n            />\n          </Item>\n        </Form>\n      </Modal>\n\n      <Modal\n        visible={modalEliminar}\n        onCancel={abrirCerrarModalEliminar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalEliminar}>No</Button>,\n          <Button type=\"primary\" danger onClick={peticionDelete}>\n            Sí\n          </Button>,\n        ]}\n      >\n        Estás seguro que deseas eliminar la dificultad{\" \"}\n        <b>{dificults && dificults.nombre}</b>?\n      </Modal>\n    </div>\n  );\n}\n","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/newList/NewList.js",["106","107","108"],"import React, { useState, useEffect } from \"react\";\nimport { Table, Button, Modal, Input, Form, DatePicker } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport \"./newList.css\";\nconst axios = require(\"axios\");\nconst { Item } = Form;\n\nconst baseUrl = \"http://67.205.155.156:4500/api/noticia\";\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\nexport default function NewList() {\n  const [data, setData] = useState([]);\n  const [news, setNews] = useState({\n    idnoticia: \"\",\n    titulo: \"\",\n    descripcion: \"\",\n    fecha: \"\",\n  });\n\n  const [modalInsertar, setModalInsertar] = useState(false);\n  const [modalEditar, setModalEditar] = useState(false);\n  const [modalEliminar, setModalEliminar] = useState(false);\n\n  const abrirCerrarModalInsertar = () => {\n    setModalInsertar(!modalInsertar);\n  };\n\n  const abrirCerrarModalEditar = () => {\n    setModalEditar(!modalEditar);\n  };\n\n  const abrirCerrarModalEliminar = () => {\n    setModalEliminar(!modalEliminar);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setNews({ ...news, [name]: value });\n    console.log(news);\n  };\n\n  const seleccionarNews = (news, caso) => {\n    setNews(news);\n    caso === \"Editar\" ? abrirCerrarModalEditar() : abrirCerrarModalEliminar();\n  };\n\n  const peticionGet = async () => {\n    await axios\n      .get(baseUrl)\n      .then((response) => {\n        setData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionPost = async () => {\n    //delete artista.id;\n    await axios\n      .post(baseUrl, news)\n      .then((response) => {\n        setData(data.concat(response.data));\n        abrirCerrarModalInsertar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionPut = async () => {\n    await axios\n      .put(baseUrl + \"/\" + news.idnoticia, news)\n      .then((response) => {\n        var dataAuxiliar = data;\n        dataAuxiliar.map((elemento) => {\n          if (elemento.idnoticia === news.idnoticia) {\n            elemento.titulo = news.titulo;\n          }\n        });\n        setData(dataAuxiliar);\n        abrirCerrarModalEditar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionDelete = async () => {\n    await axios\n      .delete(baseUrl + \"/\" + news.idnoticia)\n      .then((response) => {\n        setData(\n          data.filter((elemento) => elemento.idnoticia !== news.idnoticia)\n        );\n        abrirCerrarModalEliminar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    peticionGet();\n  }, []);\n  const columns = [\n    {\n      title: \"Titulo\",\n      dataIndex: \"titulo\",\n      key: \"titulo\",\n    },\n    {\n      title: \"Descripcion\",\n      dataIndex: \"descripcion\",\n      key: \"descripcion\",\n      width: 240,\n    },\n    {\n      title: \"Fecha\",\n      dataIndex: \"fecha\",\n      key: \"fecha\",\n    },\n\n    {\n      title: \"Acciones\",\n      key: \"acciones\",\n      render: (fila) => (\n        <>\n          <Button\n            type=\"primary\"\n            onClick={() => seleccionarNews(fila, \"Editar\")}\n          >\n            Editar\n          </Button>{\" \"}\n          {\"   \"}\n          <Button\n            type=\"primary\"\n            danger\n            onClick={() => seleccionarNews(fila, \"Eliminar\")}\n          >\n            Eliminar\n          </Button>\n        </>\n      ),\n    },\n  ];\n  return (\n    <div className=\"newList\">\n      <br />\n      <h1>Noticias</h1>\n      <br />\n      <Button\n        type=\"primary\"\n        className=\"botonInsertar\"\n        onClick={abrirCerrarModalInsertar}\n      >\n        Insertar Nueva Noticia\n      </Button>\n      <br />\n      <br />\n      <Table\n        locale={{ emptyText: \"Cargando...\" }}\n        columns={columns}\n        dataSource={data}\n      />\n\n      <Modal\n        visible={modalInsertar}\n        title=\"Insertar Noticia\"\n        destroyOnClose={true}\n        onCancel={abrirCerrarModalInsertar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalInsertar}>Cancelar</Button>,\n          <Button type=\"primary\" onClick={peticionPost}>\n            Insertar\n          </Button>,\n        ]}\n      >\n        <Form {...layout}>\n          <Item label=\"Titulo\">\n            <Input name=\"titulo\" onChange={handleChange} />\n          </Item>\n          <Item label=\"Descripcion\">\n            <Input name=\"descripcion\" onChange={handleChange} />\n          </Item>\n          <Item label=\"Fecha\">\n            <DatePicker\n              name=\"fecha\"\n              style={{ width: 315 }}\n              onChange={handleChange}\n            />\n          </Item>\n        </Form>\n      </Modal>\n\n      <Modal\n        visible={modalEditar}\n        title=\"Editar Noticia\"\n        onCancel={abrirCerrarModalEditar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalEditar}>Cancelar</Button>,\n          <Button type=\"primary\" onClick={peticionPut}>\n            Editar\n          </Button>,\n        ]}\n      >\n        <Form {...layout}>\n          <Item label=\"Titulo\">\n            <Input\n              name=\"titulo\"\n              onChange={handleChange}\n              value={news && news.titulo}\n            />\n          </Item>\n          <Item label=\"Descripcion\">\n            <Input\n              name=\"descripcion\"\n              onChange={handleChange}\n              value={news && news.descripcion}\n            />\n          </Item>\n          <Item label=\"Fecha\">\n            <DatePicker\n              name=\"fecha\"\n              onChange={handleChange}\n              value={news && news.nombre}\n            />\n          </Item>\n        </Form>\n      </Modal>\n\n      <Modal\n        visible={modalEliminar}\n        onCancel={abrirCerrarModalEliminar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalEliminar}>No</Button>,\n          <Button type=\"primary\" danger onClick={peticionDelete}>\n            Sí\n          </Button>,\n        ]}\n      >\n        Estás seguro que deseas eliminar la noticia <b>{news && news.titulo}</b>\n        ?\n      </Modal>\n    </div>\n  );\n}\n","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/routineList/RoutineList.js",["109","110","111","112","113","114"],"import React, { useState, useEffect } from \"react\";\nimport { Table, Button, Modal, Input, Form, Select } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport \"./routineList.css\";\nconst axios = require(\"axios\");\nconst { Item } = Form;\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nconst baseUrl = \"http://67.205.155.156:4500/api/rutina\";\nconst baseUrlDif = \"http://67.205.155.156:4500/api/dificultad\";\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\nexport default function RoutineList() {\n  const [data, setData] = useState([]);\n  const [dataDif, setDataDif] = useState([]);\n  const [routines, setRoutines] = useState({\n    idrutina: \"\",\n    nombre: \"\",\n    descripcion: \"\",\n    link: \"\",\n    dificultade: {\n      iddificultad: \"\",\n      nombre: \"\",\n    },\n  });\n\n  const [dificultad, setDificultad] = useState({\n    iddificultad: \"\",\n    nombre: \"\",\n  });\n\n  const [modalInsertar, setModalInsertar] = useState(false);\n  const [modalEditar, setModalEditar] = useState(false);\n  const [modalEliminar, setModalEliminar] = useState(false);\n\n  const abrirCerrarModalInsertar = () => {\n    setModalInsertar(!modalInsertar);\n  };\n\n  const abrirCerrarModalEditar = () => {\n    setModalEditar(!modalEditar);\n  };\n\n  const abrirCerrarModalEliminar = () => {\n    setModalEliminar(!modalEliminar);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setRoutines({ ...routines, [name]: value });\n    console.log(routines);\n  };\n\n  const handleChangeDif = (e) => {\n    const { name, value } = e.target;\n    setDificultad({ ...dificultad, [name]: value });\n    console.log(dificultad);\n  };\n\n  const handleChangeEje = (value) => {\n    console.log(`selected ${value}`);\n  };\n\n  const seleccionarRoutines = (routines, caso) => {\n    setRoutines(routines);\n    caso === \"Editar\" ? abrirCerrarModalEditar() : abrirCerrarModalEliminar();\n  };\n\n  const peticionGet = async () => {\n    await axios\n      .get(baseUrl)\n      .then((response) => {\n        setData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionGetDif = async () => {\n    await axios\n      .get(baseUrlDif)\n      .then((response) => {\n        setDataDif(response.dataDif);\n        console.log(dataDif);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  const peticionPost = async () => {\n    //delete artista.id;\n    await axios\n      .post(baseUrl, routines)\n      .then((response) => {\n        setData(data.concat(response.data));\n        abrirCerrarModalInsertar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionPut = async () => {\n    await axios\n      .put(baseUrl + \"/\" + routines.idrutina, routines)\n      .then((response) => {\n        var dataAuxiliar = data;\n        dataAuxiliar.map((elemento) => {\n          if (elemento.idrutina === routines.idrutina) {\n            elemento.nombre = routines.nombre;\n          }\n        });\n        setData(dataAuxiliar);\n        abrirCerrarModalEditar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionDelete = async () => {\n    await axios\n      .delete(baseUrl + \"/\" + routines.idrutina)\n      .then((response) => {\n        setData(\n          data.filter((elemento) => elemento.idrutina !== routines.idrutina)\n        );\n        abrirCerrarModalEliminar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    peticionGet();\n  }, []);\n\n  useEffect(() => {\n    peticionGetDif();\n  }, []);\n\n  const columns = [\n    {\n      title: \"Nombre\",\n      dataIndex: \"nombre\",\n      key: \"nombre\",\n    },\n    {\n      title: \"Descripcion\",\n      dataIndex: \"descripcion\",\n      key: \"descripcion\",\n      width: 280,\n    },\n    {\n      title: \"Link\",\n      dataIndex: \"link\",\n      key: \"link\",\n      width: 150,\n    },\n    {\n      title: \"Dificultad\",\n      dataIndex: [\"dificultade\", \"nombre\"],\n      key: \"iddificultad\",\n    },\n    {\n      title: \"Acciones\",\n      key: \"acciones\",\n      render: (fila) => (\n        <>\n          <Button\n            type=\"primary\"\n            onClick={() => seleccionarRoutines(fila, \"Editar\")}\n          >\n            Editar\n          </Button>{\" \"}\n          {\"   \"}\n          <Button\n            type=\"primary\"\n            danger\n            onClick={() => seleccionarRoutines(fila, \"Eliminar\")}\n          >\n            Eliminar\n          </Button>\n        </>\n      ),\n    },\n  ];\n  return (\n    <div className=\"routineList\">\n      <br />\n      <h1>Rutinas</h1>\n      <br />\n      <Button\n        type=\"primary\"\n        className=\"botonInsertar\"\n        onClick={abrirCerrarModalInsertar}\n      >\n        Insertar Nueva Rutina\n      </Button>\n      <br />\n      <br />\n      <Table\n        locale={{ emptyText: \"Cargando...\" }}\n        columns={columns}\n        dataSource={data}\n      />\n\n      <Modal\n        visible={modalInsertar}\n        title=\"Insertar Rutina\"\n        destroyOnClose={true}\n        onCancel={abrirCerrarModalInsertar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalInsertar}>Cancelar</Button>,\n          <Button type=\"primary\" onClick={peticionPost}>\n            Insertar\n          </Button>,\n        ]}\n      >\n        <Form {...layout}>\n          <Item label=\"Nombre\">\n            <Input name=\"nombre\" onChange={handleChange} />\n          </Item>\n          <Item label=\"Descripcion\">\n            <TextArea rows={4} name=\"descripcion\" onChange={handleChange} />\n          </Item>\n          <Item label=\"Link\">\n            <Input name=\"link\" onChange={handleChange} />\n          </Item>\n          <Item label=\"Dificultad\">\n            <Select\n              defaultValue=\"--Seleccione--\"\n              style={{ width: 315 }}\n              name=\"iddificultad\"\n              onChange={handleChangeDif}\n            >\n              {/*\n        dificultad.map(ele =>\n        (\n          <Option key={ele.iddificultad} value={ele.iddificultad}>{ele.nombre}</Option>\n        ))\n        */}\n            </Select>\n          </Item>\n        </Form>\n      </Modal>\n\n      <Modal\n        visible={modalEditar}\n        title=\"Editar Rutina\"\n        onCancel={abrirCerrarModalEditar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalEditar}>Cancelar</Button>,\n          <Button type=\"primary\" onClick={peticionPut}>\n            Editar\n          </Button>,\n        ]}\n      >\n        <Form {...layout}>\n          <Item label=\"Artista\">\n            <Input\n              name=\"nombre\"\n              onChange={handleChange}\n              value={routines && routines.nombre}\n            />\n          </Item>\n        </Form>\n      </Modal>\n\n      <Modal\n        visible={modalEliminar}\n        onCancel={abrirCerrarModalEliminar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalEliminar}>No</Button>,\n          <Button type=\"primary\" danger onClick={peticionDelete}>\n            Sí\n          </Button>,\n        ]}\n      >\n        Estás seguro que deseas eliminar la rutina{\" \"}\n        <b>{routines && routines.nombre}</b>?\n      </Modal>\n    </div>\n  );\n}\n","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/eventList/EventList.js",["115","116","117","118"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Table,\n  Button,\n  Modal,\n  Input,\n  Form,\n  DatePicker,\n  TimePicker,\n  Select,\n} from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport \"./eventList.css\";\nconst axios = require(\"axios\");\nconst { Item } = Form;\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nconst baseUrl = \"http://67.205.155.156:4500/api/evento\";\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\nexport default function EventList() {\n  const [data, setData] = useState([]);\n  const [events, setEvents] = useState({\n    idevento: \"\",\n    nombre: \"\",\n    fecha: \"\",\n    descripcion: \"\",\n    idinstructor: null,\n  });\n\n  const [modalInsertar, setModalInsertar] = useState(false);\n  const [modalEditar, setModalEditar] = useState(false);\n  const [modalEliminar, setModalEliminar] = useState(false);\n\n  const abrirCerrarModalInsertar = () => {\n    setModalInsertar(!modalInsertar);\n  };\n\n  const abrirCerrarModalEditar = () => {\n    setModalEditar(!modalEditar);\n  };\n\n  const abrirCerrarModalEliminar = () => {\n    setModalEliminar(!modalEliminar);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setEvents({ ...events, [name]: value });\n    console.log(events);\n  };\n\n  const seleccionarEvents = (events, caso) => {\n    setEvents(events);\n    caso === \"Editar\" ? abrirCerrarModalEditar() : abrirCerrarModalEliminar();\n  };\n\n  const peticionGet = async () => {\n    await axios\n      .get(baseUrl)\n      .then((response) => {\n        setData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionPost = async () => {\n    //delete artista.id;\n    await axios\n      .post(baseUrl, events)\n      .then((response) => {\n        setData(data.concat(response.data));\n        abrirCerrarModalInsertar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionPut = async () => {\n    await axios\n      .put(baseUrl + \"/\" + events.idevento, events)\n      .then((response) => {\n        var dataAuxiliar = data;\n        dataAuxiliar.map((elemento) => {\n          if (elemento.idevento === events.idevento) {\n            elemento.nombre = events.nombre;\n          }\n        });\n        setData(dataAuxiliar);\n        abrirCerrarModalEditar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionDelete = async () => {\n    await axios\n      .delete(baseUrl + \"/\" + events.idevento)\n      .then((response) => {\n        setData(\n          data.filter((elemento) => elemento.idevento !== events.idevento)\n        );\n        abrirCerrarModalEliminar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    peticionGet();\n  }, []);\n  const columns = [\n    {\n      title: \"Nombre\",\n      dataIndex: \"nombre\",\n      key: \"nombre\",\n    },\n    {\n      title: \"Fecha\",\n      dataIndex: \"fecha\",\n      key: \"fecha\",\n    },\n\n    {\n      title: \"Descripcion\",\n      dataIndex: \"descripcion\",\n      key: \"descripcion\",\n      width: 280,\n    },\n    {\n      title: \"ID Instructor\",\n      dataIndex: \"idinstructor\",\n      key: \"idinstructor\",\n    },\n    {\n      title: \"Acciones\",\n      key: \"acciones\",\n      render: (fila) => (\n        <>\n          <Button\n            type=\"primary\"\n            onClick={() => seleccionarEvents(fila, \"Editar\")}\n          >\n            Editar\n          </Button>{\" \"}\n          {\"   \"}\n          <Button\n            type=\"primary\"\n            danger\n            onClick={() => seleccionarEvents(fila, \"Eliminar\")}\n          >\n            Eliminar\n          </Button>\n        </>\n      ),\n    },\n  ];\n  return (\n    <div className=\"eventList\">\n      <br />\n      <h1>Eventos</h1>\n      <br />\n      <Button\n        type=\"primary\"\n        className=\"botonInsertar\"\n        onClick={abrirCerrarModalInsertar}\n      >\n        Insertar Nuevo Evento\n      </Button>\n      <br />\n      <br />\n      <Table\n        locale={{ emptyText: \"Cargando...\" }}\n        columns={columns}\n        dataSource={data}\n      />\n\n      <Modal\n        visible={modalInsertar}\n        title=\"Insertar Evento\"\n        destroyOnClose={true}\n        onCancel={abrirCerrarModalInsertar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalInsertar}>Cancelar</Button>,\n          <Button type=\"primary\" onClick={peticionPost}>\n            Insertar\n          </Button>,\n        ]}\n      >\n        <Form {...layout}>\n          <Form.Item label=\"Nombre\">\n            <Input name=\"nombre\" onChange={handleChange} />\n          </Form.Item>\n          <Form.Item label=\"Fecha\">\n            <DatePicker name=\"fecha\" onChange={handleChange} />\n          </Form.Item>\n\n          <Form.Item label=\"Descripcion\">\n            <TextArea rows={4} name=\"descripcion\" onChange={handleChange} />\n          </Form.Item>\n          <Form.Item Label=\"Instructor\">\n            <Select\n              showSearch\n              style={{ width: 200 }}\n              placeholder=\"Selecciona Instructor\"\n              optionFilterProp=\"children\"\n              onChange={handleChange}\n              filterOption={(input, option) =>\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n              }\n            >\n              <Option value=\"jack\">Jack</Option>\n              <Option value=\"lucy\">Lucy</Option>\n              <Option value=\"tom\">Tom</Option>\n            </Select>\n          </Form.Item>\n        </Form>\n      </Modal>\n\n      <Modal\n        visible={modalEditar}\n        title=\"Editar Evento\"\n        onCancel={abrirCerrarModalEditar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalEditar}>Cancelar</Button>,\n          <Button type=\"primary\" onClick={peticionPut}>\n            Editar\n          </Button>,\n        ]}\n      >\n        <Form {...layout}>\n          <Item label=\"Nombre\">\n            <Input\n              name=\"nombre\"\n              onChange={handleChange}\n              value={events && events.nombre}\n            />\n          </Item>\n          <Item label=\"Fecha\">\n            <DatePicker\n              name=\"fecha\"\n              onChange={handleChange}\n              value={events && events.fecha}\n            />\n          </Item>\n\n          <Item label=\"Descripcion\">\n            <TextArea\n              rows={4}\n              name=\"descripcion\"\n              onChange={handleChange}\n              value={events && events.descripcion}\n            />\n          </Item>\n          <Item Label=\"Instructor\">\n            <Select\n              showSearch\n              style={{ width: 200 }}\n              placeholder=\"Selecciona Instructor\"\n              optionFilterProp=\"children\"\n              onChange={handleChange}\n              filterOption={(input, option) =>\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n              }\n            >\n              <Option value=\"jack\">Jack</Option>\n              <Option value=\"lucy\">Lucy</Option>\n              <Option value=\"tom\">Tom</Option>\n            </Select>\n          </Item>\n        </Form>\n      </Modal>\n\n      <Modal\n        visible={modalEliminar}\n        onCancel={abrirCerrarModalEliminar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalEliminar}>No</Button>,\n          <Button type=\"primary\" danger onClick={peticionDelete}>\n            Sí\n          </Button>,\n        ]}\n      >\n        Estás seguro que deseas eliminar la dificultad{\" \"}\n        <b>{events && events.nombre}</b>?\n      </Modal>\n    </div>\n  );\n}\n","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/parkList/ParkList.js",["119","120","121","122"],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/profileList/ProfileList.js",["123","124","125"],"import React,{useState, useEffect} from 'react'\nimport {Table, Button, Modal, Input, Form } from \"antd\"\nimport \"antd/dist/antd.css\";\nimport {\n    EditOutlined\n  } from '@ant-design/icons';\nimport { Link} from 'react-router-dom'\nimport './profileList.css'\nconst axios = require('axios');\nconst { Item } = Form;\n\nconst baseUrl=\"http://67.205.155.156:4500/api/perfil\";\n\nconst layout={\n    labelCol:{\n      span: 8\n    },\n    wrapperCol:{\n      span: 16\n    }\n  };\n\nexport default function ProfileList() {\n\n    const [data, setData]=useState([]);\n    const [profiles, setProfiles] = useState({\n        idperfil: '',\n        nombre: ''\n    })\n\n    const [modalInsertar, setModalInsertar]=useState(false);\n    const [modalEditar, setModalEditar]=useState(false);\n    const [modalEliminar, setModalEliminar]=useState(false);\n\n    const abrirCerrarModalInsertar=()=>{\n        setModalInsertar(!modalInsertar);\n      }\n     \n      const abrirCerrarModalEditar=()=>{\n        setModalEditar(!modalEditar);\n      }\n    \n      const abrirCerrarModalEliminar=()=>{\n        setModalEliminar(!modalEliminar);\n      }\n    \n      const handleChange=e=>{\n        const {name, value}=e.target;\n        setProfiles({...profiles,\n        [name]: value});\n        console.log(profiles);\n      }\n    \n      const seleccionarProfiles=(profiles, caso)=>{\n        setProfiles(profiles);\n        (caso===\"Editar\")?abrirCerrarModalEditar():abrirCerrarModalEliminar()\n      }\n\n      \n\n\nconst peticionGet=async()=>{\n    await axios.get(baseUrl)\n    .then(response=>{\n      setData(response.data);\n    }).catch(error=>{\n      console.log(error);\n    })\n      }\n    \n    \n      const peticionPost=async()=>{\n        //delete artista.id;\n        await axios.post(baseUrl, profiles)\n        .then(response=>{\n          setData(data.concat(response.data));\n          abrirCerrarModalInsertar();\n        }).catch(error=>{\n          console.log(error);\n        })\n          }\n    \n          const peticionPut=async()=>{\n            await axios.put(baseUrl+\"/\"+profiles.idperfil, profiles)\n            .then(response=>{\n              var dataAuxiliar=data;\n              dataAuxiliar.map(elemento=>{\n                if(elemento.idperfil===profiles.idperfil){\n                  elemento.nombre=profiles.nombre;\n\n                }\n              });\n              setData(dataAuxiliar);\n              abrirCerrarModalEditar();\n            }).catch(error=>{\n              console.log(error);\n            })\n              }\n    \n              \n          const peticionDelete=async()=>{\n            await axios.delete(baseUrl+\"/\"+profiles.idperfil)\n            .then(response=>{\n              setData(data.filter(elemento=>elemento.idperfil!==profiles.idperfil));\n              abrirCerrarModalEliminar();\n            }).catch(error=>{\n              console.log(error);\n            })\n              }\n    \n      useEffect(()=>{\n        peticionGet();\n      },[])\nconst columns = [\n    \n    {\n      title: \"Nombre\",\n      dataIndex: \"nombre\",\n      key: \"nombre\",\n    },\n   \n    {\n      title: \"Acciones\",\n      key: \"acciones\",\n      render: (fila) => (\n        <>\n          <Button type=\"primary\" onClick={()=>seleccionarProfiles(fila, \"Editar\")}>Editar</Button> {\"   \"}\n          <Button type=\"primary\" danger onClick={()=>seleccionarProfiles(fila, \"Eliminar\")}>\n            Eliminar\n          </Button>\n        </>\n      ),\n    },\n  ];\n    return (\n        <div className='profileList'>\n           <br />\n           <h1>Perfiles</h1>\n      <br />\n      <Button type=\"primary\" className=\"botonInsertar\" onClick={abrirCerrarModalInsertar} >Insertar Nuevo Perfil</Button>\n      <br />\n      <br />\n      <Table locale={{ emptyText: 'Cargando...' }} columns={columns} dataSource={data}/>\n\n\n      <Modal\n      visible={modalInsertar}\n      title=\"Insertar Perfil\"\n      destroyOnClose={true}\n      onCancel={abrirCerrarModalInsertar}\n      centered\n      footer={[\n        <Button onClick={abrirCerrarModalInsertar}>Cancelar</Button>,\n        <Button type=\"primary\" onClick={peticionPost}>Insertar</Button>,\n      ]}\n      >\n<Form {...layout}>\n  <Item label=\"Nombre\">\n    <Input name=\"nombre\" onChange={handleChange}/>\n  </Item>\n\n</Form>\n      </Modal>\n\n\n      \n      <Modal\n      visible={modalEditar}\n      title=\"Editar Perfil\"\n      onCancel={abrirCerrarModalEditar}\n      centered\n      footer={[\n        <Button onClick={abrirCerrarModalEditar}>Cancelar</Button>,\n        <Button type=\"primary\" onClick={peticionPut}>Editar</Button>,\n      ]}\n      >\n<Form {...layout}>\n  <Item label=\"Nombre\">\n    <Input name=\"nombre\" onChange={handleChange} value={profiles && profiles.nombre}/>\n  </Item>\n\n  \n</Form>\n      </Modal>\n\n\n          \n      <Modal\n      visible={modalEliminar}\n      onCancel={abrirCerrarModalEliminar}\n      centered\n      footer={[\n        <Button onClick={abrirCerrarModalEliminar}>No</Button>,\n        <Button type=\"primary\" danger onClick={peticionDelete}>Sí</Button>,\n      ]}\n      >\nEstás seguro que deseas eliminar de el perfil <b>{profiles && profiles.nombre}</b>?\n      </Modal>\n            \n        </div>\n    )\n}\n","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/exerciceList/ExerciceList.js",["126","127","128","129"],"import React, { useState, useEffect } from \"react\";\nimport { Table, Button, Modal, Input, Form, Select } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport \"./exerciceList.css\";\nconst axios = require(\"axios\");\nconst { Item } = Form;\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nconst baseUrl = \"http://67.205.155.156:4500/api/ejercicio\";\nconst baseUrlDif = \"http://67.205.155.156:4500/api/dificultad\";\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\nexport default function ExerciceList() {\n  const [data, setData] = useState([]);\n  const [dataDif, setDataDif] = useState([]);\n  const [exercices, setExercices] = useState({\n    idejercicio: \"\",\n    nombre: \"\",\n    descripcion: \"\",\n    link: \"\",\n    dificultade: {\n      iddificultad: \"\",\n      nombre: \"\",\n    },\n  });\n\n  const [dificultad, setDificultad] = useState({\n    iddificultad: \"\",\n    nombre: \"\",\n  });\n\n  const [modalInsertar, setModalInsertar] = useState(false);\n  const [modalEditar, setModalEditar] = useState(false);\n  const [modalEliminar, setModalEliminar] = useState(false);\n\n  const abrirCerrarModalInsertar = () => {\n    setModalInsertar(!modalInsertar);\n  };\n\n  const abrirCerrarModalEditar = () => {\n    setModalEditar(!modalEditar);\n  };\n\n  const abrirCerrarModalEliminar = () => {\n    setModalEliminar(!modalEliminar);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setExercices({ ...exercices, [name]: value });\n    console.log(exercices);\n  };\n\n  const handleChangeDif = (e) => {\n    const { name, value } = e.target;\n    setDificultad({ ...dificultad, [name]: value });\n    console.log(dificultad);\n  };\n\n  const seleccionarExercices = (exercices, caso) => {\n    setExercices(exercices);\n    caso === \"Editar\" ? abrirCerrarModalEditar() : abrirCerrarModalEliminar();\n  };\n\n  const peticionGet = async () => {\n    await axios\n      .get(baseUrl)\n      .then((response) => {\n        setData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionGetDif = async () => {\n    await axios\n      .get(baseUrlDif)\n      .then((response) => {\n        setDataDif(response.dataDif);\n        console.log(dataDif);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionPost = async () => {\n    //delete artista.id;\n    await axios\n      .post(baseUrl, exercices)\n      .then((response) => {\n        setData(data.concat(response.data));\n        abrirCerrarModalInsertar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionPut = async () => {\n    await axios\n      .put(baseUrl + \"/\" + exercices.idejercicio, exercices)\n      .then((response) => {\n        var dataAuxiliar = data;\n        dataAuxiliar.map((elemento) => {\n          if (elemento.idejercicio === exercices.idejercicio) {\n            elemento.nombre = exercices.nombre;\n          }\n        });\n        setData(dataAuxiliar);\n        abrirCerrarModalEditar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionDelete = async () => {\n    await axios\n      .delete(baseUrl + \"/\" + exercices.idejercicio)\n      .then((response) => {\n        setData(\n          data.filter(\n            (elemento) => elemento.idejercicio !== exercices.idejercicio\n          )\n        );\n        abrirCerrarModalEliminar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    peticionGet();\n  }, []);\n\n  useEffect(() => {\n    peticionGetDif();\n  }, []);\n\n  const columns = [\n    {\n      title: \"Nombre\",\n      dataIndex: \"nombre\",\n      key: \"nombre\",\n      width: 180,\n    },\n    {\n      title: \"Descripcion\",\n      dataIndex: \"descripcion\",\n      key: \"descripcion\",\n      width: 280,\n    },\n\n    {\n      title: \"Link\",\n      dataIndex: \"link\",\n      key: \"link\",\n      width: 150,\n    },\n    {\n      title: \"Dificultad\",\n      dataIndex: [\"dificultade\", \"nombre\"],\n      key: \"iddificultad\",\n    },\n\n    {\n      title: \"Acciones\",\n      key: \"acciones\",\n      render: (fila) => (\n        <>\n          <Button\n            type=\"primary\"\n            onClick={() => seleccionarExercices(fila, \"Editar\")}\n          >\n            Editar\n          </Button>{\" \"}\n          {\"   \"}\n          <Button\n            type=\"primary\"\n            danger\n            onClick={() => seleccionarExercices(fila, \"Eliminar\")}\n          >\n            Eliminar\n          </Button>\n        </>\n      ),\n    },\n  ];\n  return (\n    <div className=\"exerciceList\">\n      <br />\n      <h1>Ejercicios</h1>\n      <br />\n      <Button\n        type=\"primary\"\n        className=\"botonInsertar\"\n        onClick={abrirCerrarModalInsertar}\n      >\n        Insertar Nuevo Ejercicio\n      </Button>\n      <br />\n      <br />\n      <Table\n        locale={{ emptyText: \"Cargando...\" }}\n        columns={columns}\n        dataSource={data}\n      />\n\n      <Modal\n        visible={modalInsertar}\n        title=\"Insertar Ejercicio\"\n        destroyOnClose={true}\n        onCancel={abrirCerrarModalInsertar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalInsertar}>Cancelar</Button>,\n          <Button type=\"primary\" onClick={peticionPost}>\n            Insertar\n          </Button>,\n        ]}\n      >\n        <Form {...layout}>\n          <Item label=\"Nombre\">\n            <Input name=\"nombre\" onChange={handleChange} />\n          </Item>\n          <Item label=\"Descripcion\">\n            <TextArea rows={4} name=\"descripcion\" onChange={handleChange} />\n          </Item>\n          <Item label=\"Link\">\n            <Input name=\"link\" onChange={handleChange} />\n          </Item>\n\n          <Item label=\"Dificultad\">\n            <Select\n              defaultValue=\"--Seleccione--\"\n              style={{ width: 315 }}\n              name=\"iddificultad\"\n              onChange={handleChangeDif}\n            >\n              {/*\n        dificultad.map(ele =>\n        (\n          <Option key={ele.iddificultad} value={ele.iddificultad}>{ele.nombre}</Option>\n        ))\n        */}\n            </Select>\n          </Item>\n        </Form>\n      </Modal>\n\n      <Modal\n        visible={modalEditar}\n        title=\"Editar Dificultad\"\n        onCancel={abrirCerrarModalEditar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalEditar}>Cancelar</Button>,\n          <Button type=\"primary\" onClick={peticionPut}>\n            Editar\n          </Button>,\n        ]}\n      >\n        <Form {...layout}>\n          <Item label=\"Nombre\">\n            <Input\n              name=\"nombre\"\n              onChange={handleChange}\n              value={exercices && exercices.nombre}\n            />\n          </Item>\n          <Item label=\"Descripcion\">\n            <TextArea\n              rows={4}\n              name=\"descripcion\"\n              onChange={handleChange}\n              value={exercices && exercices.descripcion}\n            />\n          </Item>\n          <Item label=\"Link\">\n            <Input\n              name=\"link\"\n              onChange={handleChange}\n              value={exercices && exercices.link}\n            />\n          </Item>\n          <Item label=\"Dificultad\">\n            {/*<Input name=\"iddificultad\" onChange={handleChange} value={exercices && exercices.dificultade.nombre}/>*/}\n            <Select\n              defaultValue={exercices && exercices.dificultade.nombre}\n              style={{ width: 315 }}\n              name=\"iddificultad\"\n              onChange={handleChange}\n            >\n              <Option>{exercices && exercices.dificultade.nombre}</Option>\n            </Select>\n          </Item>\n        </Form>\n      </Modal>\n\n      <Modal\n        visible={modalEliminar}\n        onCancel={abrirCerrarModalEliminar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalEliminar}>No</Button>,\n          <Button type=\"primary\" danger onClick={peticionDelete}>\n            Sí\n          </Button>,\n        ]}\n      >\n        Estás seguro que deseas eliminar el ejercicio{\" \"}\n        <b>{exercices && exercices.nombre}</b>?\n      </Modal>\n    </div>\n  );\n}\n","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/instructorList/InstructorList.js",["130","131","132"],"import React,{useState, useEffect} from 'react'\nimport {Table, Button, Modal, Input, Form } from \"antd\"\nimport \"antd/dist/antd.css\";\nimport {\n    EditOutlined\n  } from '@ant-design/icons';\nimport { Link} from 'react-router-dom'\nimport './instructorList.css'\nconst axios = require('axios');\nconst { Item } = Form;\n\nconst baseUrl=\"http://67.205.155.156:4500/api/instructor\";\n\nconst layout={\n    labelCol:{\n      span: 8\n    },\n    wrapperCol:{\n      span: 16\n    }\n  };\n\nexport default function InstructorList() {\n\n    const [data, setData]=useState([]);\n    const [instructors, setInstructors] = useState({\n        idinstructor: '',\n        nombre: ''\n    })\n\n    const [modalInsertar, setModalInsertar]=useState(false);\n    const [modalEditar, setModalEditar]=useState(false);\n    const [modalEliminar, setModalEliminar]=useState(false);\n\n    const abrirCerrarModalInsertar=()=>{\n        setModalInsertar(!modalInsertar);\n      }\n     \n      const abrirCerrarModalEditar=()=>{\n        setModalEditar(!modalEditar);\n      }\n    \n      const abrirCerrarModalEliminar=()=>{\n        setModalEliminar(!modalEliminar);\n      }\n    \n      const handleChange=e=>{\n        const {name, value}=e.target;\n        setInstructors({...instructors,\n        [name]: value});\n        console.log(instructors);\n      }\n    \n      const seleccionarInstructors=(instructors, caso)=>{\n        setInstructors(instructors);\n        (caso===\"Editar\")?abrirCerrarModalEditar():abrirCerrarModalEliminar()\n      }\n\n      \n\n\nconst peticionGet=async()=>{\n    await axios.get(baseUrl)\n    .then(response=>{\n      setData(response.data);\n    }).catch(error=>{\n      console.log(error);\n    })\n      }\n    \n    \n      const peticionPost=async()=>{\n        //delete artista.id;\n        await axios.post(baseUrl, instructors)\n        .then(response=>{\n          setData(data.concat(response.data));\n          abrirCerrarModalInsertar();\n        }).catch(error=>{\n          console.log(error);\n        })\n          }\n    \n          const peticionPut=async()=>{\n            await axios.put(baseUrl+\"/\"+instructors.idinstructor, instructors)\n            .then(response=>{\n              var dataAuxiliar=data;\n              dataAuxiliar.map(elemento=>{\n                if(elemento.id===instructors.idinstructor){\n                  elemento.nombre=instructors.nombre;\n\n                }\n              });\n              setData(dataAuxiliar);\n              abrirCerrarModalEditar();\n            }).catch(error=>{\n              console.log(error);\n            })\n              }\n    \n              \n          const peticionDelete=async()=>{\n            await axios.delete(baseUrl+\"/\"+instructors.idinstructor)\n            .then(response=>{\n              setData(data.filter(elemento=>elemento.idinstructor!==instructors.iddificultad));\n              abrirCerrarModalEliminar();\n            }).catch(error=>{\n              console.log(error);\n            })\n              }\n    \n      useEffect(()=>{\n        peticionGet();\n      },[])\nconst columns = [\n    \n    {\n      title: \"Nombre\",\n      dataIndex: \"nombre\",\n      key: \"nombre\",\n    },\n   \n    {\n      title: \"Acciones\",\n      key: \"acciones\",\n      render: (fila) => (\n        <>\n          <Button type=\"primary\" onClick={()=>seleccionarInstructors(fila, \"Editar\")}>Editar</Button> {\"   \"}\n          <Button type=\"primary\" danger onClick={()=>seleccionarInstructors(fila, \"Eliminar\")}>\n            Eliminar\n          </Button>\n        </>\n      ),\n    },\n  ];\n    return (\n        <div className='instructorList'>\n           <br />\n           <h1>Dificultades</h1>\n      <br />\n      <Button type=\"primary\" className=\"botonInsertar\" onClick={abrirCerrarModalInsertar} >Insertar Nuevo Instructor</Button>\n      <br />\n      <br />\n      <Table locale={{ emptyText: 'Cargando...' }}  columns={columns} dataSource={data}/>\n\n\n      <Modal\n      visible={modalInsertar}\n      title=\"Insertar Instructor\"\n      destroyOnClose={true}\n      onCancel={abrirCerrarModalInsertar}\n      centered\n      footer={[\n        <Button onClick={abrirCerrarModalInsertar}>Cancelar</Button>,\n        <Button type=\"primary\" onClick={peticionPost}>Insertar</Button>,\n      ]}\n      >\n<Form {...layout}>\n  <Item label=\"Instructor\">\n    <Input name=\"nombre\" onChange={handleChange}/>\n  </Item>\n\n</Form>\n      </Modal>\n\n\n      \n      <Modal\n      visible={modalEditar}\n      title=\"Editar Instructor\"\n      onCancel={abrirCerrarModalEditar}\n      centered\n      footer={[\n        <Button onClick={abrirCerrarModalEditar}>Cancelar</Button>,\n        <Button type=\"primary\" onClick={peticionPut}>Editar</Button>,\n      ]}\n      >\n<Form {...layout}>\n  <Item label=\"Instructor\">\n    <Input name=\"nombre\" onChange={handleChange} value={instructors && instructors.nombre}/>\n  </Item>\n\n  \n</Form>\n      </Modal>\n\n\n          \n      <Modal\n      visible={modalEliminar}\n      onCancel={abrirCerrarModalEliminar}\n      centered\n      footer={[\n        <Button onClick={abrirCerrarModalEliminar}>No</Button>,\n        <Button type=\"primary\" danger onClick={peticionDelete}>Sí</Button>,\n      ]}\n      >\nEstás seguro que deseas eliminar e instructor <b>{instructors && instructors.nombre}</b>?\n      </Modal>\n            \n        </div>\n    )\n}\n","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/login/Login.js",[],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/dashboard/Dashboard.js",["133"],"import React from 'react';\nimport Sidebar from '../../components/sidebar/Sidebar';\nimport Topbar from '../../components/topbar/Topbar';\n\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\n\nimport Home from '../../pages/home/Home';\nimport Login from '../../pages/login/Login';\nimport UserList from '../../pages/userList/UserList';\nimport DificultList from '../../pages/dificultList/DificultList';\nimport ParkList from '../../pages/parkList/ParkList';\nimport RoutineList from '../../pages/routineList/RoutineList';\nimport NewList from '../../pages/newList/NewList';\nimport ProfileList from '../../pages/profileList/ProfileList';\nimport EventList from '../../pages/eventList/EventList';\nimport ExerciceList from '../../pages/exerciceList/ExerciceList';\nimport InstructorList from '../../pages/instructorList/InstructorList';\n\n\nfunction Dashboard() {\n  return (\n    <Router>\n      <Topbar />\n      <div className=\"container\">\n        <Sidebar />\n        <Switch>\n          \n          <Route path='/dashboard/home'>\n            <Home />\n          </Route>\n          <Route path='/dashboard/users'>\n            <UserList />\n          </Route>\n          <Route path='/dashboard/dificults'>\n            <DificultList />\n          </Route>\n          <Route path='/dashboard/exercices'>\n            <ExerciceList />\n          </Route>\n          <Route path='/dashboard/parks'>\n            <ParkList />\n          </Route>\n          <Route path='/dashboard/routines'>\n            <RoutineList />\n          </Route>\n          <Route path='/dashboard/news'>\n            <NewList />\n          </Route>\n          <Route path='/dashboard/events'>\n            <EventList />\n          </Route>\n          <Route path='/dashboard/profiles'>\n            <ProfileList />\n          </Route>\n          <Route path='/dashboard/instructor'>\n            <InstructorList />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default Dashboard;\n",{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":5,"column":49,"nodeType":"140","messageId":"141","endLine":5,"endColumn":53},{"ruleId":"138","severity":1,"message":"139","line":5,"column":10,"nodeType":"140","messageId":"141","endLine":5,"endColumn":14},{"ruleId":"142","severity":1,"message":"143","line":86,"column":37,"nodeType":"144","messageId":"145","endLine":86,"endColumn":39},{"ruleId":"138","severity":1,"message":"146","line":3,"column":3,"nodeType":"140","messageId":"141","endLine":3,"endColumn":12},{"ruleId":"138","severity":1,"message":"147","line":9,"column":3,"nodeType":"140","messageId":"141","endLine":9,"endColumn":13},{"ruleId":"148","severity":1,"message":"149","line":89,"column":39,"nodeType":"150","messageId":"151","endLine":89,"endColumn":62},{"ruleId":"134","replacedBy":"152"},{"ruleId":"136","replacedBy":"153"},{"ruleId":"138","severity":1,"message":"154","line":4,"column":10,"nodeType":"140","messageId":"141","endLine":4,"endColumn":22},{"ruleId":"138","severity":1,"message":"139","line":5,"column":10,"nodeType":"140","messageId":"141","endLine":5,"endColumn":14},{"ruleId":"142","severity":1,"message":"143","line":84,"column":37,"nodeType":"144","messageId":"145","endLine":84,"endColumn":39},{"ruleId":"138","severity":1,"message":"154","line":4,"column":10,"nodeType":"140","messageId":"141","endLine":4,"endColumn":22},{"ruleId":"138","severity":1,"message":"139","line":5,"column":10,"nodeType":"140","messageId":"141","endLine":5,"endColumn":14},{"ruleId":"142","severity":1,"message":"143","line":86,"column":37,"nodeType":"144","messageId":"145","endLine":86,"endColumn":39},{"ruleId":"138","severity":1,"message":"154","line":4,"column":10,"nodeType":"140","messageId":"141","endLine":4,"endColumn":22},{"ruleId":"138","severity":1,"message":"139","line":5,"column":10,"nodeType":"140","messageId":"141","endLine":5,"endColumn":14},{"ruleId":"138","severity":1,"message":"155","line":9,"column":9,"nodeType":"140","messageId":"141","endLine":9,"endColumn":15},{"ruleId":"138","severity":1,"message":"156","line":71,"column":9,"nodeType":"140","messageId":"141","endLine":71,"endColumn":24},{"ruleId":"142","severity":1,"message":"143","line":120,"column":37,"nodeType":"144","messageId":"145","endLine":120,"endColumn":39},{"ruleId":"157","severity":1,"message":"158","line":153,"column":6,"nodeType":"159","endLine":153,"endColumn":8,"suggestions":"160"},{"ruleId":"138","severity":1,"message":"161","line":9,"column":3,"nodeType":"140","messageId":"141","endLine":9,"endColumn":13},{"ruleId":"138","severity":1,"message":"154","line":13,"column":10,"nodeType":"140","messageId":"141","endLine":13,"endColumn":22},{"ruleId":"138","severity":1,"message":"139","line":14,"column":10,"nodeType":"140","messageId":"141","endLine":14,"endColumn":14},{"ruleId":"142","severity":1,"message":"143","line":98,"column":37,"nodeType":"144","messageId":"145","endLine":98,"endColumn":39},{"ruleId":"138","severity":1,"message":"162","line":2,"column":45,"nodeType":"140","messageId":"141","endLine":2,"endColumn":50},{"ruleId":"138","severity":1,"message":"154","line":4,"column":10,"nodeType":"140","messageId":"141","endLine":4,"endColumn":22},{"ruleId":"138","severity":1,"message":"139","line":5,"column":10,"nodeType":"140","messageId":"141","endLine":5,"endColumn":14},{"ruleId":"142","severity":1,"message":"143","line":88,"column":37,"nodeType":"144","messageId":"145","endLine":88,"endColumn":39},{"ruleId":"138","severity":1,"message":"154","line":5,"column":5,"nodeType":"140","messageId":"141","endLine":5,"endColumn":17},{"ruleId":"138","severity":1,"message":"139","line":7,"column":10,"nodeType":"140","messageId":"141","endLine":7,"endColumn":14},{"ruleId":"142","severity":1,"message":"143","line":87,"column":40,"nodeType":"144","messageId":"145","endLine":87,"endColumn":42},{"ruleId":"138","severity":1,"message":"154","line":4,"column":10,"nodeType":"140","messageId":"141","endLine":4,"endColumn":22},{"ruleId":"138","severity":1,"message":"139","line":5,"column":10,"nodeType":"140","messageId":"141","endLine":5,"endColumn":14},{"ruleId":"142","severity":1,"message":"143","line":117,"column":37,"nodeType":"144","messageId":"145","endLine":117,"endColumn":39},{"ruleId":"157","severity":1,"message":"158","line":152,"column":6,"nodeType":"159","endLine":152,"endColumn":8,"suggestions":"163"},{"ruleId":"138","severity":1,"message":"154","line":5,"column":5,"nodeType":"140","messageId":"141","endLine":5,"endColumn":17},{"ruleId":"138","severity":1,"message":"139","line":7,"column":10,"nodeType":"140","messageId":"141","endLine":7,"endColumn":14},{"ruleId":"142","severity":1,"message":"143","line":87,"column":40,"nodeType":"144","messageId":"145","endLine":87,"endColumn":42},{"ruleId":"138","severity":1,"message":"164","line":8,"column":8,"nodeType":"140","messageId":"141","endLine":8,"endColumn":13},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'LineStyle' is defined but never used.","'Streetview' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps",["165"],["166"],"'EditOutlined' is defined but never used.","'Option' is assigned a value but never used.","'handleChangeEje' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'peticionGetDif'. Either include it or remove the dependency array.","ArrayExpression",["167"],"'TimePicker' is defined but never used.","'Image' is defined but never used.",["168"],"'Login' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"169","fix":"171"},"Update the dependencies array to be: [peticionGetDif]",{"range":"172","text":"173"},{"range":"174","text":"173"},[3682,3684],"[peticionGetDif]",[3666,3668]]